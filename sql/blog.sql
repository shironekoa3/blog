/*
SQLyog Professional v12.09 (64 bit)
MySQL - 8.0.28 : Database - blog
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`blog` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;

USE `blog`;

/*Table structure for table `access` */

DROP TABLE IF EXISTS `access`;

CREATE TABLE `access` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `ipaddr` varchar(100) DEFAULT NULL,
  `location` varchar(200) DEFAULT NULL,
  `browser` varchar(200) DEFAULT NULL,
  `os` varchar(50) DEFAULT NULL,
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP,
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP,
  `is_deleted` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=332 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `access` */

insert  into `access`(`id`,`ipaddr`,`location`,`browser`,`os`,`create_time`,`update_time`,`is_deleted`) values (1,NULL,NULL,NULL,NULL,'2023-04-16 17:21:00','2023-04-16 17:23:05',0),(2,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:20:38','2023-04-16 18:20:38',0),(3,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:21:04','2023-04-16 18:21:04',0),(4,'127.0.0.1','内网IP','Edge 112.0.1722','Windows 10','2023-04-16 18:21:25','2023-04-16 18:21:25',0),(5,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:24:24','2023-04-16 18:24:24',0),(6,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:24:40','2023-04-16 18:24:40',0),(7,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:28:20','2023-04-16 18:28:20',0),(8,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:29:53','2023-04-16 18:29:53',0),(9,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:30:04','2023-04-16 18:30:04',0),(10,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:30:21','2023-04-16 18:30:21',0),(11,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:31:11','2023-04-16 18:31:11',0),(12,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:32:47','2023-04-16 18:32:47',0),(13,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:32:49','2023-04-16 18:32:49',0),(14,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:33:01','2023-04-16 18:33:01',0),(15,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:33:14','2023-04-16 18:33:14',0),(16,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:33:53','2023-04-16 18:33:53',0),(17,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:34:07','2023-04-16 18:34:07',0),(18,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:34:31','2023-04-16 18:34:31',0),(19,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:34:53','2023-04-16 18:34:53',0),(20,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:35:54','2023-04-16 18:35:54',0),(21,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:38:29','2023-04-16 18:38:29',0),(22,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:39:31','2023-04-16 18:39:31',0),(23,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:39:48','2023-04-16 18:39:48',0),(24,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:41:42','2023-04-16 18:41:42',0),(25,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:41:44','2023-04-16 18:41:44',0),(26,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:41:46','2023-04-16 18:41:46',0),(27,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:43:08','2023-04-16 18:43:08',0),(28,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:43:26','2023-04-16 18:43:26',0),(29,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:43:28','2023-04-16 18:43:28',0),(30,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:43:50','2023-04-16 18:43:50',0),(31,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:44:15','2023-04-16 18:44:15',0),(32,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:45:49','2023-04-16 18:45:49',0),(33,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:45:54','2023-04-16 18:45:54',0),(34,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:53:06','2023-04-16 18:53:06',0),(35,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:54:00','2023-04-16 18:54:00',0),(36,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:54:17','2023-04-16 18:54:17',0),(37,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:54:52','2023-04-16 18:54:52',0),(38,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:55:09','2023-04-16 18:55:09',0),(39,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:58:42','2023-04-16 18:58:42',0),(40,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:58:54','2023-04-16 18:58:54',0),(41,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:59:00','2023-04-16 18:59:00',0),(42,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:59:13','2023-04-16 18:59:13',0),(43,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 18:59:22','2023-04-16 18:59:22',0),(44,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 19:00:59','2023-04-16 19:00:59',0),(45,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 19:01:10','2023-04-16 19:01:10',0),(46,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:04:25','2023-04-16 20:04:25',0),(47,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:07:06','2023-04-16 20:07:06',0),(48,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:08:34','2023-04-16 20:08:34',0),(49,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:08:49','2023-04-16 20:08:49',0),(50,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:12:04','2023-04-16 20:12:04',0),(51,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:12:31','2023-04-16 20:12:31',0),(52,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:13:42','2023-04-16 20:13:42',0),(53,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:15:26','2023-04-16 20:15:26',0),(54,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:16:16','2023-04-16 20:16:16',0),(55,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:16:27','2023-04-16 20:16:27',0),(56,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:16:48','2023-04-16 20:16:48',0),(57,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:20:06','2023-04-16 20:20:06',0),(58,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:21:28','2023-04-16 20:21:28',0),(59,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:22:18','2023-04-16 20:22:18',0),(60,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:22:53','2023-04-16 20:22:53',0),(61,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:23:51','2023-04-16 20:23:51',0),(62,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:23:53','2023-04-16 20:23:53',0),(63,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:24:07','2023-04-16 20:24:07',0),(64,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:25:43','2023-04-16 20:25:43',0),(65,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:26:55','2023-04-16 20:26:55',0),(66,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:28:14','2023-04-16 20:28:14',0),(67,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:29:14','2023-04-16 20:29:14',0),(68,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:29:21','2023-04-16 20:29:21',0),(69,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:30:19','2023-04-16 20:30:19',0),(70,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:38:37','2023-04-16 20:38:37',0),(71,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:39:26','2023-04-16 20:39:26',0),(72,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:46:40','2023-04-16 20:46:40',0),(73,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:46:59','2023-04-16 20:46:59',0),(74,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 20:53:44','2023-04-16 20:53:44',0),(75,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 21:08:06','2023-04-16 21:08:06',0),(76,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 21:08:45','2023-04-16 21:08:45',0),(77,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 21:11:26','2023-04-16 21:11:26',0),(78,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 21:12:44','2023-04-16 21:12:44',0),(79,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 21:12:55','2023-04-16 21:12:55',0),(80,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 21:18:01','2023-04-16 21:18:01',0),(81,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 21:18:04','2023-04-16 21:18:04',0),(82,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 21:18:20','2023-04-16 21:18:20',0),(83,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 21:19:52','2023-04-16 21:19:52',0),(84,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 21:21:47','2023-04-16 21:21:47',0),(85,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 21:27:12','2023-04-16 21:27:12',0),(86,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-16 21:27:42','2023-04-16 21:27:42',0),(87,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 09:14:51','2023-04-17 09:14:51',0),(88,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 09:15:26','2023-04-17 09:15:26',0),(89,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 09:15:30','2023-04-17 09:15:30',0),(90,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 09:18:31','2023-04-17 09:18:31',0),(91,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 09:26:46','2023-04-17 09:26:46',0),(92,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 09:48:47','2023-04-17 09:48:47',0),(93,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 09:49:24','2023-04-17 09:49:24',0),(94,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 09:50:30','2023-04-17 09:50:30',0),(95,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 09:51:27','2023-04-17 09:51:27',0),(96,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 09:53:36','2023-04-17 09:53:36',0),(97,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 09:57:30','2023-04-17 09:57:30',0),(98,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 09:57:50','2023-04-17 09:57:50',0),(99,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 10:04:31','2023-04-17 10:04:31',0),(100,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 10:08:06','2023-04-17 10:08:06',0),(101,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 10:08:30','2023-04-17 10:08:30',0),(102,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 10:13:50','2023-04-17 10:13:50',0),(103,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 10:22:30','2023-04-17 10:22:30',0),(104,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 10:25:07','2023-04-17 10:25:07',0),(105,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 10:25:16','2023-04-17 10:25:16',0),(106,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 10:25:26','2023-04-17 10:25:26',0),(107,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 10:28:35','2023-04-17 10:28:35',0),(108,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 10:41:03','2023-04-17 10:41:03',0),(109,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 10:42:32','2023-04-17 10:42:32',0),(110,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 11:24:31','2023-04-17 11:24:31',0),(111,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 11:25:58','2023-04-17 11:25:58',0),(112,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 12:45:14','2023-04-17 12:45:14',0),(113,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 12:45:21','2023-04-17 12:45:21',0),(114,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 12:45:25','2023-04-17 12:45:25',0),(115,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 12:45:27','2023-04-17 12:45:27',0),(116,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 12:45:55','2023-04-17 12:45:55',0),(117,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 13:34:03','2023-04-17 13:34:03',0),(118,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 13:35:27','2023-04-17 13:35:27',0),(119,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 13:36:46','2023-04-17 13:36:46',0),(120,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 13:39:14','2023-04-17 13:39:14',0),(121,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 20:54:42','2023-04-17 20:54:42',0),(122,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 22:29:18','2023-04-17 22:29:18',0),(123,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 22:31:17','2023-04-17 22:31:17',0),(124,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:07:29','2023-04-17 23:07:29',0),(125,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:08:48','2023-04-17 23:08:48',0),(126,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:12:19','2023-04-17 23:12:19',0),(127,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:12:33','2023-04-17 23:12:33',0),(128,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:28:00','2023-04-17 23:28:00',0),(129,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:28:03','2023-04-17 23:28:03',0),(130,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:28:08','2023-04-17 23:28:08',0),(131,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:28:10','2023-04-17 23:28:10',0),(132,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:32:06','2023-04-17 23:32:06',0),(133,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:34:11','2023-04-17 23:34:11',0),(134,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:40:48','2023-04-17 23:40:48',0),(135,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:42:30','2023-04-17 23:42:30',0),(136,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:43:20','2023-04-17 23:43:20',0),(137,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:43:22','2023-04-17 23:43:22',0),(138,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:43:24','2023-04-17 23:43:24',0),(139,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:43:26','2023-04-17 23:43:26',0),(140,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:43:35','2023-04-17 23:43:35',0),(141,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:43:37','2023-04-17 23:43:37',0),(142,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:43:39','2023-04-17 23:43:39',0),(143,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:43:40','2023-04-17 23:43:40',0),(144,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:43:41','2023-04-17 23:43:41',0),(145,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:43:46','2023-04-17 23:43:46',0),(146,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:44:15','2023-04-17 23:44:15',0),(147,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:44:21','2023-04-17 23:44:21',0),(148,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:44:29','2023-04-17 23:44:29',0),(149,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:44:35','2023-04-17 23:44:35',0),(150,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:44:44','2023-04-17 23:44:44',0),(151,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:48:00','2023-04-17 23:48:00',0),(152,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:50:18','2023-04-17 23:50:18',0),(153,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:52:05','2023-04-17 23:52:05',0),(154,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:52:52','2023-04-17 23:52:52',0),(155,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:52:58','2023-04-17 23:52:58',0),(156,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:53:52','2023-04-17 23:53:52',0),(157,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:56:36','2023-04-17 23:56:36',0),(158,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:58:02','2023-04-17 23:58:02',0),(159,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:58:13','2023-04-17 23:58:13',0),(160,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:58:43','2023-04-17 23:58:43',0),(161,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:58:54','2023-04-17 23:58:54',0),(162,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:59:41','2023-04-17 23:59:41',0),(163,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:59:45','2023-04-17 23:59:45',0),(164,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-17 23:59:49','2023-04-17 23:59:49',0),(165,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 18:51:51','2023-04-18 18:51:51',0),(166,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 18:51:54','2023-04-18 18:51:54',0),(167,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 18:52:29','2023-04-18 18:52:29',0),(168,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 18:53:16','2023-04-18 18:53:16',0),(169,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 18:53:24','2023-04-18 18:53:24',0),(170,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 18:58:47','2023-04-18 18:58:47',0),(171,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 18:58:55','2023-04-18 18:58:55',0),(172,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 18:59:00','2023-04-18 18:59:00',0),(173,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:05:37','2023-04-18 19:05:37',0),(174,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:09:58','2023-04-18 19:09:58',0),(175,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:10:21','2023-04-18 19:10:21',0),(176,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:10:34','2023-04-18 19:10:34',0),(177,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:10:52','2023-04-18 19:10:52',0),(178,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:10:56','2023-04-18 19:10:56',0),(179,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:25:52','2023-04-18 19:25:52',0),(180,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:31:14','2023-04-18 19:31:14',0),(181,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:31:16','2023-04-18 19:31:16',0),(182,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:31:18','2023-04-18 19:31:18',0),(183,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:31:20','2023-04-18 19:31:20',0),(184,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:31:22','2023-04-18 19:31:22',0),(185,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:31:23','2023-04-18 19:31:23',0),(186,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:31:24','2023-04-18 19:31:24',0),(187,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:31:26','2023-04-18 19:31:26',0),(188,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:31:50','2023-04-18 19:31:50',0),(189,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:32:31','2023-04-18 19:32:31',0),(190,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:32:34','2023-04-18 19:32:34',0),(191,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:32:44','2023-04-18 19:32:44',0),(192,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:33:03','2023-04-18 19:33:03',0),(193,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:39:47','2023-04-18 19:39:47',0),(194,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:39:50','2023-04-18 19:39:50',0),(195,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:39:53','2023-04-18 19:39:53',0),(196,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:40:05','2023-04-18 19:40:05',0),(197,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:40:07','2023-04-18 19:40:07',0),(198,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:40:11','2023-04-18 19:40:11',0),(199,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:41:21','2023-04-18 19:41:21',0),(200,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:41:23','2023-04-18 19:41:23',0),(201,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:43:18','2023-04-18 19:43:18',0),(202,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:43:21','2023-04-18 19:43:21',0),(203,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:52:20','2023-04-18 19:52:20',0),(204,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:52:30','2023-04-18 19:52:30',0),(205,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:52:38','2023-04-18 19:52:38',0),(206,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:52:47','2023-04-18 19:52:47',0),(207,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:52:50','2023-04-18 19:52:50',0),(208,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 19:56:39','2023-04-18 19:56:39',0),(209,'127.0.0.1','内网IP','Chrome 111.0.0','Windows 10','2023-04-18 20:47:40','2023-04-18 20:47:40',0),(210,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-21 23:37:29','2023-04-21 23:37:29',0),(211,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-21 23:38:01','2023-04-21 23:38:01',0),(212,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-21 23:39:53','2023-04-21 23:39:53',0),(213,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-21 23:39:57','2023-04-21 23:39:57',0),(214,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-21 23:40:58','2023-04-21 23:40:58',0),(215,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-21 23:41:32','2023-04-21 23:41:32',0),(216,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-21 23:42:49','2023-04-21 23:42:49',0),(217,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-21 23:46:11','2023-04-21 23:46:11',0),(218,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-21 23:46:26','2023-04-21 23:46:26',0),(219,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 16:10:54','2023-04-22 16:10:54',0),(220,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 16:10:55','2023-04-22 16:10:55',0),(221,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:03:52','2023-04-22 19:03:52',0),(222,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:03:56','2023-04-22 19:03:56',0),(223,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:48:06','2023-04-22 19:48:06',0),(224,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:49:39','2023-04-22 19:49:39',0),(225,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:50:32','2023-04-22 19:50:32',0),(226,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:51:12','2023-04-22 19:51:12',0),(227,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:51:53','2023-04-22 19:51:53',0),(228,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:52:33','2023-04-22 19:52:33',0),(229,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:53:04','2023-04-22 19:53:04',0),(230,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:53:31','2023-04-22 19:53:31',0),(231,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:54:05','2023-04-22 19:54:05',0),(232,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:54:18','2023-04-22 19:54:18',0),(233,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:54:58','2023-04-22 19:54:58',0),(234,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-22 19:55:02','2023-04-22 19:55:02',0),(235,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-23 15:20:56','2023-04-23 15:20:56',0),(236,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-23 15:21:31','2023-04-23 15:21:31',0),(237,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-23 15:21:36','2023-04-23 15:21:36',0),(238,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-23 15:22:17','2023-04-23 15:22:17',0),(239,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 12:05:19','2023-04-24 12:05:19',0),(240,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 12:05:24','2023-04-24 12:05:24',0),(241,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 12:07:10','2023-04-24 12:07:10',0),(242,'127.0.0.1','内网IP','Chrome Mobile 90.0.4430','Android 11','2023-04-24 12:09:39','2023-04-24 12:09:39',0),(243,'127.0.0.1','内网IP','Chrome Mobile 90.0.4430','Android 11','2023-04-24 12:09:42','2023-04-24 12:09:42',0),(244,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 13:20:39','2023-04-24 13:20:39',0),(245,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 15:00:09','2023-04-24 15:00:09',0),(246,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 21:17:36','2023-04-24 21:17:36',0),(247,'127.0.0.1','内网IP','Chrome Mobile 90.0.4430','Android 11','2023-04-24 21:18:35','2023-04-24 21:18:35',0),(248,'127.0.0.1','内网IP','Chrome Mobile 90.0.4430','Android 11','2023-04-24 21:24:34','2023-04-24 21:24:34',0),(249,'127.0.0.1','内网IP','Chrome Mobile 90.0.4430','Android 11','2023-04-24 21:31:48','2023-04-24 21:31:48',0),(250,'127.0.0.1','内网IP','Chrome Mobile 90.0.4430','Android 11','2023-04-24 21:31:56','2023-04-24 21:31:56',0),(251,'127.0.0.1','内网IP','Chrome Mobile 90.0.4430','Android 11','2023-04-24 21:42:17','2023-04-24 21:42:17',0),(252,'127.0.0.1','内网IP','Chrome Mobile 90.0.4430','Android 11','2023-04-24 21:42:21','2023-04-24 21:42:21',0),(253,'127.0.0.1','内网IP','Chrome Mobile 90.0.4430','Android 11','2023-04-24 21:43:17','2023-04-24 21:43:17',0),(254,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 21:54:34','2023-04-24 21:54:34',0),(255,'127.0.0.1','内网IP','Mobile Safari 13.0.3','iOS 13','2023-04-24 21:55:16','2023-04-24 21:55:16',0),(256,'127.0.0.1','内网IP','Mobile Safari 13.0.3','iOS 13','2023-04-24 21:56:30','2023-04-24 21:56:30',0),(257,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 22:01:52','2023-04-24 22:01:52',0),(258,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 22:12:31','2023-04-24 22:12:31',0),(259,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 22:14:38','2023-04-24 22:14:38',0),(260,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 22:30:09','2023-04-24 22:30:09',0),(261,'127.0.0.1','内网IP','Mobile Safari 13.0.3','iOS 13','2023-04-24 22:31:33','2023-04-24 22:31:33',0),(262,'127.0.0.1','内网IP','Mobile Safari 13.0.3','iOS 13','2023-04-24 22:32:50','2023-04-24 22:32:50',0),(263,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 22:38:13','2023-04-24 22:38:13',0),(264,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 22:41:07','2023-04-24 22:41:07',0),(265,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 22:41:28','2023-04-24 22:41:28',0),(266,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 22:41:40','2023-04-24 22:41:40',0),(267,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 22:42:04','2023-04-24 22:42:04',0),(268,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 22:51:43','2023-04-24 22:51:43',0),(269,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 23:28:12','2023-04-24 23:28:12',0),(270,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 23:38:37','2023-04-24 23:38:37',0),(271,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 23:39:58','2023-04-24 23:39:58',0),(272,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-24 23:40:38','2023-04-24 23:40:38',0),(273,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 00:07:40','2023-04-25 00:07:40',0),(274,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 10:23:57','2023-04-25 10:23:57',0),(275,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 10:24:07','2023-04-25 10:24:07',0),(276,'127.0.0.1','内网IP','Chrome Mobile 112.0.0','Android 6','2023-04-25 10:35:53','2023-04-25 10:35:53',0),(277,'127.0.0.1','内网IP','Chrome Mobile 112.0.0','Android 6','2023-04-25 10:36:02','2023-04-25 10:36:02',0),(278,'127.0.0.1','内网IP','Chrome Mobile 112.0.0','Android 6','2023-04-25 10:36:10','2023-04-25 10:36:10',0),(279,'127.0.0.1','内网IP','Mobile Safari 13.0.3','iOS 13','2023-04-25 10:36:15','2023-04-25 10:36:15',0),(280,'127.0.0.1','内网IP','Mobile Safari 13.0.3','iOS 13','2023-04-25 10:36:33','2023-04-25 10:36:33',0),(281,'127.0.0.1','内网IP','Mobile Safari 13.0.3','iOS 13','2023-04-25 10:36:40','2023-04-25 10:36:40',0),(282,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 11:12:46','2023-04-25 11:12:46',0),(283,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 11:27:43','2023-04-25 11:27:43',0),(284,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 11:27:55','2023-04-25 11:27:55',0),(285,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 11:28:08','2023-04-25 11:28:08',0),(286,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 11:28:15','2023-04-25 11:28:15',0),(287,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:08:06','2023-04-25 12:08:06',0),(288,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:48:19','2023-04-25 12:48:19',0),(289,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:50:12','2023-04-25 12:50:12',0),(290,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:50:14','2023-04-25 12:50:14',0),(291,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:50:18','2023-04-25 12:50:18',0),(292,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:50:19','2023-04-25 12:50:19',0),(293,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:54:49','2023-04-25 12:54:49',0),(294,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:54:54','2023-04-25 12:54:54',0),(295,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:55:00','2023-04-25 12:55:00',0),(296,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:55:01','2023-04-25 12:55:01',0),(297,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:55:02','2023-04-25 12:55:02',0),(298,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:55:03','2023-04-25 12:55:03',0),(299,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:55:04','2023-04-25 12:55:04',0),(300,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 12:55:05','2023-04-25 12:55:05',0),(301,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:07:18','2023-04-25 13:07:18',0),(302,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:13:27','2023-04-25 13:13:27',0),(303,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:13:29','2023-04-25 13:13:29',0),(304,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:13:35','2023-04-25 13:13:35',0),(305,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:13:37','2023-04-25 13:13:37',0),(306,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:13:39','2023-04-25 13:13:39',0),(307,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:14:44','2023-04-25 13:14:44',0),(308,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:16:12','2023-04-25 13:16:12',0),(309,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:16:13','2023-04-25 13:16:13',0),(310,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:16:14','2023-04-25 13:16:14',0),(311,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:16:15','2023-04-25 13:16:15',0),(312,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:16:16','2023-04-25 13:16:16',0),(313,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:42','2023-04-25 13:17:42',0),(314,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:43','2023-04-25 13:17:43',0),(315,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:44','2023-04-25 13:17:44',0),(316,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:44','2023-04-25 13:17:44',0),(317,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:44','2023-04-25 13:17:44',0),(318,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:44','2023-04-25 13:17:44',0),(319,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:45','2023-04-25 13:17:45',0),(320,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:45','2023-04-25 13:17:45',0),(321,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:45','2023-04-25 13:17:45',0),(322,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:45','2023-04-25 13:17:45',0),(323,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:46','2023-04-25 13:17:46',0),(324,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:46','2023-04-25 13:17:46',0),(325,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:46','2023-04-25 13:17:46',0),(326,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:47','2023-04-25 13:17:47',0),(327,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:47','2023-04-25 13:17:47',0),(328,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:47','2023-04-25 13:17:47',0),(329,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:47','2023-04-25 13:17:47',0),(330,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:48','2023-04-25 13:17:48',0),(331,'127.0.0.1','内网IP','Chrome 112.0.0','Windows 10','2023-04-25 13:17:48','2023-04-25 13:17:48',0);

/*Table structure for table `article` */

DROP TABLE IF EXISTS `article`;

CREATE TABLE `article` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '文章编号',
  `title` varchar(256) NOT NULL COMMENT '文章标题',
  `content` longtext NOT NULL COMMENT '文章内容',
  `summary` varchar(1024) NOT NULL COMMENT '文章摘要',
  `category_id` bigint unsigned NOT NULL COMMENT '文章分类编号',
  `thumbnail` varchar(256) DEFAULT NULL COMMENT '缩略图',
  `is_top` tinyint unsigned NOT NULL DEFAULT '0' COMMENT '是否置顶（0否 1是）',
  `status` tinyint unsigned NOT NULL DEFAULT '0' COMMENT '文章状态（0正常 1草稿）',
  `view_count` int unsigned NOT NULL DEFAULT '0' COMMENT '文章访问量',
  `is_comment` tinyint unsigned NOT NULL DEFAULT '1' COMMENT '是否允许评论（0否 1是）',
  `create_by` bigint unsigned NOT NULL DEFAULT '1' COMMENT '创建用户',
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  `is_deleted` tinyint unsigned NOT NULL DEFAULT '0' COMMENT '逻辑删除',
  PRIMARY KEY (`id`),
  KEY `fk_article_create_by` (`create_by`),
  KEY `fk_article_category_id` (`category_id`)
) ENGINE=InnoDB AUTO_INCREMENT=47 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `article` */

insert  into `article`(`id`,`title`,`content`,`summary`,`category_id`,`thumbnail`,`is_top`,`status`,`view_count`,`is_comment`,`create_by`,`create_time`,`update_time`,`is_deleted`) values (1,'Hello World','Welcome to [blog](https://github.com/shironekoa3/blog)!\n\nThis is your very first post. \n\nIf you get any problems when using blog, you can ask me on [GitHub](https://github.com/shironekoa3/blog/issues).','Welcome to [blog](https://github.com/shironekoa3/blog)!\n\nThis is your very first post. \n\nIf you get any problems when using blog, you can ask me on [GitHub](https://github.com/shironekoa3/blog/issues).',2,'',0,0,82,0,0,'2023-03-23 11:29:29','2023-03-23 11:29:29',0),(34,'慢慢的，就没有了，就像从未存在过','> 一盏一盏的灯，灭了。四面八方的光源，消失了。我们生活的五光十色的世界，变成了一片黑色。\n天黑了，那么睡觉吧，但愿长醉不复醒，卧槽泥马勒戈壁。\n最后，我们变成了一群做梦的人，这个梦的名字，叫根据相关法律法规，相关搜索结果不予显示梦。\n\n作者: 小海\n\n几年以前，我曾经嘲笑过某科技界大佬。当时他说：也许90后、95后会慢慢不知道谷歌是什么网站。\n\n那一年，这对于我来说简直就是世界上最好笑的笑话。谷歌，全世界最卓越的互联网公司，活在互联网的一代中国人，会不知道他们的网站？\n\n今天，我收回这句嘲笑。因为这件不可能的事，它慢慢变成了现实。\n\n没有人再关注什么谷歌不谷歌。对他们来说，百度也蛮好用的，反正他们几乎没用过谷歌。没有谷歌又怎样？大家还是开心的刷微博，看微信，听歌，看娱乐节目。对于从来就不知道谷歌的人来说，少了谷歌又有什么影响？\n\n多年前，我们也是可以登陆Facebook的。其实这个网站和校内一样，也挺蠢的。可在上面你能看到老外们的生活，可以轻易的跟一万公里以外的人互相拜访，可以看到很多根本不会开到校内上的主页。你用汉语回复，下面给你聊起来的可能是香港仔，可能是台湾人。你用英语回复，说不定有比你英语用的更蹩脚的寂寞的北欧人来跟你搭讪。你感觉地球真的变成了地球村，你还没拉门走出去，别人就推门走了进来。\n\n然后，它就没有了。起初，它的失踪激起了很大的声音，后来，声音就消失了。\n\n多年前，我们也是可以登陆Twitter的。其实这个网站和微博一样，也不过是些信息流，刷上一整天，也不见得有什么用处。但至少，你可以以最快速度获取你想知道的任何新事，你会真正了解什么事情在全世界是流行的，而不是经过各种截图、翻译、转发，甚至曲解、断章取义、黑白颠倒的东西。你知道的是真相，赤裸裸的，也许有点太短的真相。但至少中间不会有无数人的加工与再加工，偏激、片面，就在这个过程中产生了，不管后来者有意还是无意。\n\n然后，它就没有了。首先是它的本体没有了，然后它的模仿者也没有了，模仿者的模仿者也没有了。只剩一个模仿者的模仿者的模仿者，现在你每天能在上面看到无数广告。\n\n多年前，我们也是可以登陆YouTube的。对于有的人来说，这个网站就是个大型优酷，当年有人信誓旦旦的说，没有YouTube，我们中国人会很快让优酷超过YouTube。可这么多年过去了，视频还是那么卡，内容还是那么垃圾，原创还是那么容易被盗窃，视频丰富度还是那么的可怜。在YouTube上，你能看到全世界最棒的手艺人，最逗乐的笑话，最天马行空的创意，最激荡人心的音乐，最美好的完美瞬间，可在优酷上，你想看一分钟视频，请先看半分钟广告。\n\n哦，对了。Instagram，有些人可能感觉它和QQ空间也差不多。可我在上面关注了六百多个摄影师，它们都是顶好顶好的影像记录者，每天看他们的作品，我感觉到很幸福，那种即使没有到那里去，也身临其境的幸福。我还在上面认识了一个日本的爱自拍的帅小伙，一个爱喝酒的韩国大叔，一个十年前到过中国今天会在每张我发的紫禁城照片下点赞的美国大爷，一个美丽无比的俄罗斯妹子，我和他们基本上都难以交流，语言是很大的障碍，但几个简单的单词，心意也就到了，这种感觉，有时候比多年老友相聚还兴奋。因为这是人类不同族群自由交流互相沟通的过程，这种过程很神奇，真的很神奇。\n\n可现在，它没有了，它之所以没有就因为在某个特定的时间你在搜索特定的词汇时，会搜出来特定的照片。虽然这么搜的人并不多，虽然看到的人也不会大惊小怪，也不会觉得天黑了，天亮了，天要塌了，天要变了。可它就是没了，Instagram，就这么没了。谷歌也是这么没的，Twitter也是这么没的，Facebook也是这么没的。不知道是什么人，在什么场合，说了什么话，下了什么决定。就要有超过十亿人像陷于哥谭市的孤岛里一样，看着一座又一座桥梁被炸掉，又被炸掉，又被炸掉，然后，就什么都没了。\n\n我时常觉得悲哀，真的好悲哀，一个我根本不认识也不知道是谁的人，也许是一个群体，在不断抢走我身边的东西，而我却无能为力。我抱怨一声，他听不到，任何人都听不到。我怒吼一句，身边的大多数人却像看疯子一样的看着我。我哀嚎一声，这声音被阻碍在黑黑的幕墙以里。我发出尖锐的嘶吼，这声音传不了多远，就和我那被抢走的东西一样，消失了，不见了，就像从来没存在过一样。\n\n对于本来就没存在过的东西，有谁又会觉得在意呢？那些本来拥有又被掠夺的人的哀愁，后来的人又怎么懂呢？我曾经是拥有一切的，我曾经是拥有世界的，我站在这片土地上，呼吸的是自由的空气，饮下的是自由的琼浆玉液。就在长的无法计数的时间里，我自由生命的一部分又一部分就这么被杀死了，突然就杀死了。可我还始终觉得，它们还奄奄一息的活着，就像它们是慢慢的死去的一样。\n\n可它们终归是死了，而且随着它们的死，愈来愈多的事情慢慢的发生了，很慢很慢，几乎不被人察觉，可还是发生了。\n\n没有谷歌，我可以用百度呀。可某些结果被越挪越后，越挪越后，最后就不见了。就像本来就不该搜出这个结果一样。\n\n没有Facebook，我可以用校内呀。可你想发只有在Facebook上能发的文章，很快在校内上就失踪了。接着，校内变成了人人，话题变成了人人都关心的话题。大家都在抢着看星座、明星、八卦、娱乐。没有人会关心什么消失了，反正它们本来也没多少存在感。\n\n没有YouTube，我可以用优酷呀。可你却经常只能在优酷上看到抄袭别人的作品，而且还不署名，而且还洋洋得意，而且还自我陶醉，就好像那个idea本来属于他自己一样。你看了还要惊呼，他是如此的有创意！好一个抄袭的创意，可你却不知道，因为你不知道这个世界上有个网站叫YouTube。\n\n没有Twitter，我还可以用微博呀。可你想知道最近发生了什么，你搜的越勤快，越能看到越明显的 “根据相关法律法规，相关搜索结果不予显示 ”。时间长了，你想，反正知道了也没什么用，不如不看了。\n\n慢慢的，一扇又一扇的门关上了。今天你打开世界上最大的博客网站，发现它没了。明天你一看，世界上最好的设计师分享网站没了，一开始是刷新的很慢很慢，后来它就没了。过两天再一看，平常每天都会读两篇文章的媒体网站没了，那里的文章缤纷多彩，最后都变成了该页无法显示几个字。再过几个月，大学的网站不让上了，摄影师的网站不让上了，就连百度日本这种自家网站，也没了。\n\n接着，漫画看不了了，接着，动画看不成了。接着，美剧英剧失踪了。下载美剧英剧的网站又又又又又失踪了。尊重正版，保护权益，行吧，然后字幕网站也没了。\n\n游戏没了，你习惯性登陆的游戏网站，发现下载栏正在整治中。论坛关了，天天都在看的论坛，突然接到相关部门的电话，因为 “报备问题 ”不让办了。个人网站，私人博客，对不起，说没就没有，你在上面存了多少多年辛勤耕耘的东西都没用。\n\n你关注的人，有一天你登陆微博，发现他怎么好久都没说话了，然后你搜索了一下，发现他的账号不存在了，而且你搜他的名字，他的名字未予显示。\n\n一盏一盏的灯，灭了。四面八方的光源，消失了。我们生活的五光十色的世界，变成了一片黑色。\n\n天黑了，那么睡觉吧，但愿长醉不复醒，卧槽泥马勒戈壁。\n\n最后，我们变成了一群做梦的人，这个梦的名字，叫根据相关法律法规，相关搜索结果不予显示梦。','> 一盏一盏的灯，灭了。四面八方的光源，消失了。我们生活的五光十色的世界，变成了一片黑色。\n天黑了，那么睡觉吧，但愿长醉不复醒，卧槽泥马勒戈壁。\n最后，我们变成了一群做梦的人，这个梦的名字，叫根据相关法律法规，相关搜索结果不予显示梦。\n\n作者: 小海\n\n几年以前，我曾经嘲笑过某科技界大佬。当时他说：也许90后、95后会慢慢不知道谷歌是什么网站。\n\n那一年，这对于我来说简直就是世界上最好笑的笑话。谷歌，全世界最卓越的互联网公司，活在互联网的一代中国人，会不知道他们的网站？\n\n今天，我收回这句嘲笑。因为这件不可能的事，它慢慢变成了现实。\n\n没有人再关注什么谷歌不谷歌。对他们来说，百度也蛮好用的，反',3,'',0,0,0,1,1,'2023-04-22 19:48:03','2023-04-22 19:48:03',0),(35,'网件 WNDR4300 路由器折腾日记','很早以前就知道 SSR 这种东西，是可以放在路由器上运行的，这样就可以让每个连接路由器网络的设备直接翻墙，省去了每个设备都要连接的麻烦，而且解决了部分设备没有翻墙客户端的问题(Switch)。\n\n最近在油管上刷视频的时候，偶然看到 `虚拟机安装OpenWrt` 相关的视频，出于爱折腾的性心理，就自己动手试了一下。\n\n几个小时的折腾过后，终于第一次用上了 OpenWrt 系统。\n\n管理界面很漂亮，功能插件也多。这也太好用了吧！我将 SSR 节点导入 ShadowSockR Plus+ 插件中并配置，电脑可以正常扶墙，移动端修改网关之后也可以直接扶墙了，简直一颗赛艇。\n\n两天之后，心态逐渐平稳了下来，发现还是有一些问题的。比如电脑必须要保持开机，比如每个设备都必须指定网关为电脑虚拟机的IP，使用起来还是有点麻烦的。\n\n然后我就了解到了，可以直接将路由器的系统刷成 OpenWrt 系统，这样就可以解决上面的问题了。\n\n经过一整天的了解和筛选，我最终选择了 `网件 WNDR4300`。从万能的某宝下单，两天之后就拿到了货。\n\n![网件 WNDR4300 路由器](https://javac.me/images/posts/p8-wndr4300/wndr4300.jpg)\n\n由于在这方面还是小白，就让卖家直接帮我刷了 `明月永在` 的 OpenWrt 系统。\n\n但是当我登入路由器后台时，发现后台管理界面实在是有年代感，于是我就准备自己折腾，刷一个好看点的后台系统。\n\n又折腾了一整天，算是了解了 `网件 WNDR4300` 的基本的刷机流程：\n\n  1. 进入路由器恢复模式：先关闭路由器电源，然后用牙签插入小孔，然后按电源键开机，等电源指示灯从最开始的橙黄闪烁，变成绿灯，再变成绿灯闪烁，就可以松开了。\n  \n  2. 电脑连接并配置：电脑网线连接路由器的 LAN 口，然后修改电脑的IP为 `192.168.1.X`，子网掩码 `255.255.255.0`，打开 CMD 开始 ping `192.168.1.1`，等什么时候能 ping 通，说明连接成功。\n  \n  3. 刷机：首先电脑要开启 `TFTP` 功能，在 Windows 的 `启动或关闭Windows功能` 中可以开启。然后打开 CMD，执行 `tftp -i 192.168.1.1 XXX.img` 等待完成即刷入成功。\n\n我最后选择了 AlbertZhan 大佬的固件，界面很漂亮，插件也很多。\n\n![路由器 后台界面](https://javac.me/images/posts/p8-wndr4300/wndr4300_sys1.png)\n![路由器 后台界面 2](https://javac.me/images/posts/p8-wndr4300/wndr4300_sys2.png)\n\n当然，不仅是要界面漂亮，我买这个路由器的主要目的就是为了翻墙。\n\n配置好节点并启动之后，打开浏览器，Google、YouTube，正常访问，终于折腾完了。\n\n------\n\n然而，又发现了新的问题。\n\n同一个节点，我用电脑虚拟机装 OpenWrt 系统，或者直接使用翻墙客户端，速度都是可以跑满带宽的。\n\n但是我使用这个路由器的时候，带宽只能跑到 4 Mbps 的样子。\n\n![YouTube 速度测试](https://javac.me/images/posts/p8-wndr4300/youtube_speed1.png)\n![YouTube 速度测试 2](https://javac.me/images/posts/p8-wndr4300/youtube_speed2.png)\n\n经过了解，发现翻墙速度是比较依赖于 CPU 性能的，而普通的路由器一般不需要很高的 CPU，所以速度很低。\n\n对翻墙网速有要求的话，要购买软路由才能跑满宽带的样子~\n\n','很早以前就知道 SSR 这种东西，是可以放在路由器上运行的，这样就可以让每个连接路由器网络的设备直接翻墙，省去了每个设备都要连接的麻烦，而且解决了部分设备没有翻墙客户端的问题(Switch)。\n\n最近在油管上刷视频的时候，偶然看到 `虚拟机安装OpenWrt` 相关的视频，出于爱折腾的性心理，就自己动手试了一下。\n\n几个小时的折腾过后，终于第一次用上了 OpenWrt 系统。\n\n管理界面很漂亮，功能插件也多。这也太好用了吧！我将 SSR 节点导入 ShadowSockR Plus+ 插件中并配置，电脑可以正常扶墙，移动端修改网关之后也可以直接扶墙了，简直一颗赛艇。\n\n两天之后，心态逐渐平稳了下',11,'https://javac.me/images/posts/p8-wndr4300/wndr4300.jpg',0,0,5,1,1,'2023-04-22 19:49:36','2023-04-22 19:49:36',0),(36,'Hexo 博客部署到服务器','# 说明\n\n本教程使用系统为 `Centos 7.x`。\n\n# 服务器安装 Git\n\n如果 `服务器端` 没有安装 Git 程序，可以通过下面的命令来安装。\n\n``` shell\n# 查看当前 Git 版本\ngit --version\n\n# 安装 Git\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel\nyum install -y git\n\n```\n\n# 创建 Git 目录和博客目录\n\n在 `服务器端` 执行下面的命令来创建 Git 目录和博客目录。\n\n``` shell\n# 切换目录\ncd /www/wwwroot/\n\n# 创建 Git 仓库\ngit init --bare vsneko.git\n\n# 创建博客目录\nmkdir www.vsneko.com\n```\n\n# 修改 Git 推送设置\n\n通过创建 Hook 钩子函数，来将 Git 推送过来的文件保存到博客目录（而不是 Git 工作目录）。\n\n``` shell\n# 切换目录\ncd vsneko.git/hooks/\n\n# 创建 post-receive 文件\nvi post-receive\n```\n\n进入编辑模式之后，输入如下内容：\n\n``` shell\n#!/bin/sh\ngit --work-tree=/www/wwwroot/www.vsneko.com --git-dir=/www/wwwroot/vsneko.git checkout -f\n```\n\n修改保存完毕之后，必须要添加 `可执行` 的权限，否则无法生效。\n\n	chmod +x post-receive\n\n# SSH 公钥\n\n必须将本地公钥配置到服务器端，否则没有权限。\n\n在 `本地` 执行下面的命令来配置公钥（使用 Git Bash）。\n\n``` shell\n# 设置 Git 信息\ngit config --global user.name \"shironekoa3\"\ngit config --global user.email \"shironekoa3@qq.com\"\n\n# 本地生成密钥\nssh-keygen -t rsa -C \"shironekoa3@qq.com\"\n\n# 查看公钥\ncat ~/.ssh/id_rsa.pub\n\n# 将公钥复制到服务器（注意跟着提示走）\nssh-copy-id root@ip\n```\n\n# 本地测试\n\n在本地测试看刚刚搭建的 Git 仓库能不能拉取下来。\n\n	git clone root@ip:/www/wwwroot/vsneko.git\n\n如果能够正常拉取，则配置成功。\n\n也可以进行推送，而且推送的文件会自动转移到博客目录。\n\n\n# Hexo 配置部署信息\n\n在 Hexo 博客的配置文件里配置部署的服务器信息：\n\n``` yml\ndeploy: \n  type: git \n  repository: root@ip:/www/wwwroot/vsneko.git\n  branch: master\n```\n\n服务器端可以使用 `Nginx` 等任何 Web 服务器来搭建网站。\n\n\n# 一些问题\n\n>  LF will be replaced by CRLF in XXX.\n\n这是由于 Linux 中的换行符是 LF，而 Windows 中的换行符是 CRLF，如果想用 Windows 下的 Git 管理来自 Linux 的文本文件，Git 会默认将 LF 转换成 CRLF，并发出烦人的 Warning。\n\n通过如下命令来关闭自动转换：\n\n``` shell\n# 当前 Git 仓库\ngit config core.autocrlf false\n	\n# 全局\ngit config --global core.autocrlf false\n```\n','# 说明\n\n本教程使用系统为 `Centos 7.x`。\n\n# 服务器安装 Git\n\n如果 `服务器端` 没有安装 Git 程序，可以通过下面的命令来安装。\n\n``` shell\n# 查看当前 Git 版本\ngit --version\n\n# 安装 Git\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel\nyum install -y git\n\n```\n\n# 创建 Git 目录和博客目录\n\n在 `服务器端` 执行下面的命令来创建 Git 目录和博客目录。\n\n``` shell\n',2,'',0,0,1,1,1,'2023-04-22 19:50:30','2023-04-22 19:50:30',0),(37,'Java 读写文件的几种方式','> 本篇文章转载自: https://www.cnblogs.com/MyTiMo/p/10998525.html\n\n**Java 把不同来源和目标的数据都统一抽象为数据流**\n\nJava语言的输入输出功能是十分强大而灵活的。\n\n在Java类库中，IO部分的内容是很庞大的，因为它涉及的领域很广泛：标准输入输出，文件的操作，网络上的数据流，字符串流，对象流，zip文件流等等。\n\n这里介绍几种读写文件的方式。\n\n# IO Stream(字节流)\n\n```Java\n//读取文件(字节流)\nFileInputStream in = new FileInputStream(\"d:\\\\1.txt\");\n//写入相应的文件\nFileOutputStream out = new FileOutputStream(\"d:\\\\2.txt\");\n//读取数据\n//一次性取多少字节\nbyte[] bytes = new byte[2048];\n//接受读取的内容(n就代表的相关数据，只不过是数字的形式)\nint n = -1;\n//循环取出数据\nwhile ((n = in.read(bytes,0,bytes.length)) != -1) {\n    //转换成字符串\n    String str = new String(bytes,0,n,\"UTF-8\"); #这里可以实现字节到字符串的转换，比较实用\n    System.out.println(str);\n    //写入相关文件\n    out.write(bytes, 0, n);\n    //清除缓存向文件写入数据\n    out.flush();\n}\n//关闭流\nin.close();\nout.close();\n```\n\n# Buffered IO Stream(缓存字节流)\n\n使用方式和字节流差不多，但是效率更高(推荐使用)。\n\n```Java\n//读取文件(缓存字节流)\nBufferedInputStream in=new BufferedInputStream(new FileInputStream(\"d:\\\\1.txt\"));\n//写入相应的文件\nBufferedOutputStream out=new BufferedOutputStream(new FileOutputStream(\"d:\\\\2.txt\"));\n//读取数据\n//一次性取多少字节\nbyte[] bytes = new byte[2048];\n//接受读取的内容(n就代表的相关数据，只不过是数字的形式)\nint n = -1;\n//循环取出数据\nwhile ((n = in.read(bytes,0,bytes.length)) != -1) {\n    //转换成字符串\n    String str = new String(bytes,0,n,\"UTF-8\");\n    System.out.println(str);\n    //写入相关文件\n    out.write(bytes, 0, n);\n    //清除缓存，向文件写入数据\n	out.flush();\n}\n//关闭流\nin.close();\nout.close();\n```\n\n# IO Stream Reader/Writer\n\n这种方式不建议使用，不能直接字节长度读写。使用范围用做字符转换。\n\n```Java\n//读取文件(字节流)\nInputStreamReader in = new InputStreamReader(new FileInputStream(\"d:\\\\1.txt\"),\"UTF-8\");\n//写入相应的文件\nOutputStreamWriter out = new OutputStreamWriter(new FileOutputStream(\"d:\\\\2.txt\"));\n//读取数据\n//循环取出数据\nchar[] chars = new char[2048];\nint len = -1;\nwhile ((len = in.read(chars,0,chars.length)) != -1) {\n    System.out.println(len);\n    //写入相关文件\n    out.write(chars,0,len);\n    //清除缓存\n	out.flush();\n}\n//关闭流\nin.close();\nout.close();\n```\n\n# Buffered Reader/Writer(缓存流)\n\n提供read Line方法读取一行文本。\n\n```Java\nFileInputStream fileInputStream = new FileInputStream(\"d:\\\\1.txt\");\nFileOutputStream fileOutputStream = new FileOutputStream(\"d:\\\\2.txt\", true);\nInputStreamReader inputStreamReader = new InputStreamReader(fileInputStream,\"UTF-8\");\nOutputStreamWriter outputStreamWriter = new OutputStreamWriter(fileOutputStream,\"UTF-8\");\n//读取文件(字符流)\nBufferedReader in = new BufferedReader(inputStreamReader,\"UTF-8\"));#这里主要是涉及中文\n//BufferedReader in = new BufferedReader(new FileReader(\"d:\\\\1.txt\")));\n//写入相应的文件\nBufferedWriter out = new BufferedWriter(outputStreamWriter,\"UTF-8\"));\n//BufferedWriter out = new BufferedWriter(new FileWriter(\"d:\\\\2.txt\"))；\n//读取数据\n//循环取出数据\nString str = null;\nwhile ((str = in.readLine()) != null) {\n    System.out.println(str);\n    //写入相关文件\n    out.write(str);\n    out.newLine();\n    //清除缓存向文件写入数据\n    out.flush();\n}\n//关闭流\nin.close();\nout.close();\n```\n\n# Reader、Print Writer\n\nPrint Writer 这个很好用，在写数据的同事可以格式化。\n\n```Java\n//读取文件(字节流)\nReader in = new InputStreamReader(new FileInputStream(\"d:\\\\1.txt\"),\"UTF-8\");\n//写入相应的文件\nPrintWriter out = new PrintWriter(new FileWriter(\"d:\\\\2.txt\"));\n//读取数据\n//循环取出数据\nbyte[] bytes = new byte[1024];\nint len = -1;\nwhile ((len = in.read()) != -1) {\n    System.out.println(len);\n    //写入相关文件\n    out.write(len);\n    //清除缓存\n    out.flush();\n}\n//关闭流\nin.close();\nout.close();\n```\n\n# 总结\n\n基本的几种用法就这么多，当然每一个读写的使用都是可以分开的。为了更好的来使用 IO。流里面的读写，建议使用Buffered Input Stream、Buffered Output Stream。\n','> 本篇文章转载自: https://www.cnblogs.com/MyTiMo/p/10998525.html\n\n**Java 把不同来源和目标的数据都统一抽象为数据流**\n\nJava语言的输入输出功能是十分强大而灵活的。\n\n在Java类库中，IO部分的内容是很庞大的，因为它涉及的领域很广泛：标准输入输出，文件的操作，网络上的数据流，字符串流，对象流，zip文件流等等。\n\n这里介绍几种读写文件的方式。\n\n# IO Stream(字节流)\n\n```Java\n//读取文件(字节流)\nFileInputStream in = new FileInputStream(\"d:\\\\1.txt\");\n/',2,'',0,0,5,1,1,'2023-04-22 19:51:10','2023-04-22 19:51:10',0),(38,'解决 Tomcat 日志输出乱码','> 本篇文章为转载。\n\n# 解决办法\n打开 `Tomcat ` 安装路径的 `tomcat/conf/` 目录，修改 `logging.properties` 配置文件。\n\n# Output 乱码解决\n\n找到下面的配置，将其注释掉。\n\n```Properties\n# java.util.logging.ConsoleHandler.encoding = UTF-8\n```\n\n或者将 `UTF-8` 改为 `GBK`。\n\n```Properties\njava.util.logging.ConsoleHandler.encoding = GBK\n```\n\n# Tomcat Localhost Log 乱码解决\n\n找到下面的配置，将其注释掉。\n\n```Properties\n# localhost.org.apache.juli.AsyncFileHandler.encoding = UTF-8\n```\n\n或者将 `UTF-8` 改为 `GBK`。\n\n```Properties\nlocalhost.org.apache.juli.AsyncFileHandler.encoding = GBK\n```\n\n# Tomcat Catania Log 乱码解决\n\n找到下面的配置，将其注释掉。\n\n```Properties\n# catalina.org.apache.juli.AsyncFileHandler.encoding = UTF-8\n```\n\n或者将 `UTF-8` 改为 `GBK`。\n\n```Properties\ncatalina.org.apache.juli.AsyncFileHandler.encoding = GBK\n```\n','> 本篇文章为转载。\n\n# 解决办法\n打开 `Tomcat ` 安装路径的 `tomcat/conf/` 目录，修改 `logging.properties` 配置文件。\n\n# Output 乱码解决\n\n找到下面的配置，将其注释掉。\n\n```Properties\n# java.util.logging.ConsoleHandler.encoding = UTF-8\n```\n\n或者将 `UTF-8` 改为 `GBK`。\n\n```Properties\njava.util.logging.ConsoleHandler.encoding = GBK\n```\n\n# Tomcat Localhost Lo',2,'',0,0,1,1,1,'2023-04-22 19:51:51','2023-04-22 19:51:51',0),(39,'数据库事务的一些属性','# 事务的 ACID 属性\n\n1. 原子性 (Atomicity)\n\n   原子性是指事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。\n\n2. 一致性 (Consistency)\n\n   事务必须使数据库从一个一致性状态变换到另外一个一致性状态。\n\n3. 隔离性 (Isolation)\n\n   事务的隔离性是指一个事务的执行不能被其他事务干扰，即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰。\n\n4. 持久性 (Durability)\n\n   持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来的其他操作和数据库故障不应该对其有任何影响。\n\n# 数据库的并发问题\n\n+ 对于同时运行的多个事务，当这些事务访问数据库中相同的数据时，如果没有采取必要的隔离机制，就会导致各种并发问题。\n\n	- 脏读：对于两个事务 T1 和 T2，T1 读取了已经被 T2 更新但还没有被提交的字段。之后若 T2 回滚，T1 读取的内容就是临时且无效的。\n	\n	- 不可重复读：对于两个事务 T1 和 T2，T1 读取了一个字段，然后 T2 更新了该字段，之后 T1 再次读取同一个字段，值就不同了。\n	\n	- 幻读：对于两个事务 T1 和 T2，T1 从一个表中读取了一个字段，然后 T2 在该表中插入了一些新行，之后如果 T1 再次读取同一个表，就会多出几行。\n\n+ 数据库事务的隔离性: 数据库系统必须具有隔离并发运行各个事物的能力，使它们不会相互影响，避免各种并发问题。\n\n+ 一个事务与其他事务隔离的程度称为隔离级别，数据库规定了多种事务隔离级别，不同隔离级别对应不同的干扰程度，隔离级别越高，数据一致性就越好，但并发性越弱。\n\n# 四种隔离级别\n\n| 隔离级别        | 描述                                                         |\n| --------------- | ------------------------------------------------------------ |\n| READ UNCOMMITED | ( 读未提交数据 ) 允许事务读取未被其他事务提交的变更，脏读，不可重复读和幻读的问题都会出现。 |\n| READ COMMITED   | ( 读已提交数据 ) 只允许事务读取已经被其它事务提交的变更，可以避免脏读，但不可重复读和幻读问题仍然可能出现。 |\n| REPEATABLE READ | ( 可重复读 ) 确保事务可以多次从一个字段中读取相同的值，在这个事务持续期间，禁止其他事务对这个字段进行更新，可以避免脏读和不可重复读，但幻读问题仍然可能出现。 |\n| SERIALLZABLE    | ( 串行化 ) 确保事务可以从一个表中读取相同的行，在这个事务持续期间，禁止其他事务对该表执行插入、更新和删除操作，所有并发问题都可以避免，但性能十分低下。 |\n\n','# 事务的 ACID 属性\n\n1. 原子性 (Atomicity)\n\n   原子性是指事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。\n\n2. 一致性 (Consistency)\n\n   事务必须使数据库从一个一致性状态变换到另外一个一致性状态。\n\n3. 隔离性 (Isolation)\n\n   事务的隔离性是指一个事务的执行不能被其他事务干扰，即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰。\n\n4. 持久性 (Durability)\n\n   持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来的其他操作和数据',1,'',1,0,32,1,1,'2023-04-22 19:52:31','2023-04-22 19:54:56',0),(40,'CSS Flex 布局','# Flex 布局父项常见属性\n\n## flex-direction\n\nflex-direction 可以用来设置主轴的方向。\n\n在 flex 布局中，是分为主轴和侧轴两个方向的。\n\n默认主轴方向就是 x 轴方向，水平向右。\n\n默认侧轴方向就是 y 轴方向，垂直向下。\n\n| 属性值         | 说明              |\n| -------------- | ----------------- |\n| row            | 从左到右 (默认值) |\n| row-reverse    | 从右到左          |\n| column         | 从上到下          |\n| column-reverse | 从下到上          |\n\n## justify-content\n\njustify-content 属性定义了项目在 <span style=\"color: red\">主轴上</span> 的对齐方式。\n\n<p style=\"color: red;\">注意：使用这个属性之前一定要确定好主轴是哪个。</p>\n\n| 属性值        | 说明                       |\n| ------------- | -------------------------- |\n| flex-start    | 从头部开始排列 (默认值)    |\n| flex-end      | 从尾部开始排列             |\n| center        | 在主轴居中对齐             |\n| space-around  | 平分剩余空间               |\n| space-between | 先两边贴边，再平分剩余空间 |\n\n## flex-wrap\n\n默认情况下，项目都排在一条线上。flex-wrap 属性可以修改子元素是否换行显示。\n\n| 属性值 | 说明            |\n| ------ | --------------- |\n| nowrap | 不换行 (默认值) |\n| wrap   | 换行            |\n\n## align-items\n\nalign-items 是控制子项在侧轴上的排列方式，在子项为 <span style=\"color: red;\">单行</span>  的时候使用。\n\n| 属性值     | 说明                    |\n| ---------- | ----------------------- |\n| flex-start | 从上到下 (默认值)       |\n| flex-end   | 从下到上                |\n| center     | 挤在一起居中 (垂直居中) |\n| stretch    | 拉伸                    |\n\n## align-content\n\nalign-content 可以设置子项在侧轴上的排列方式，并且只能用于子项为 <span style=\"color: red;\">多行</span> 的情况，在单行下是没有效果的。\n\n| 属性值        | 说明                           |\n| ------------- | ------------------------------ |\n| flex-start    | 在侧轴的头部开始排列 (默认值)  |\n| flex-end      | 在侧轴的尾部开始排列           |\n| center        | 在侧轴中间显示                 |\n| space-around  | 子项平分剩余空间               |\n| space-between | 子项先两边贴边，再平分剩余空间 |\n| stretch       | 子项拉伸                       |\n\n## flex-flow\n\nflex-flow 属性是 flex-direction属性和 flex-wrap 属性的复合属性。\n\n```CSS\nflex-flow: row wrap;\n```\n\n\n\n# Flex 布局子项常见属性\n\n## flex\n\nflex 属性定义子项分配 <span style=\"color: red;\">剩余空间</span>，用 flex 来表示占多少份。\n\n```CSS\n.item {\n    flex: 1; /* default 0 */\n}\n```\n\n## align-self\n\nalign-self 属性用来控制子项自己在侧轴上的排列方式。它允许单个项目有与其他项目不一样的对齐方式，可以覆盖 align-items 属性。默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。\n\n```CSS\nspan:nth-child(2) {\n    /* 设置自己在侧轴上的排列方式 */\n    align-self: flex-end;\n}\n```\n\n## order\n\norder 属性定义项目的排列顺序。数值越小，排列越靠前，默认值为 0 。\n\n```CSS\nspan:nth-child(2) {\n    order: -1;\n}\n```\n\n','# Flex 布局父项常见属性\n\n## flex-direction\n\nflex-direction 可以用来设置主轴的方向。\n\n在 flex 布局中，是分为主轴和侧轴两个方向的。\n\n默认主轴方向就是 x 轴方向，水平向右。\n\n默认侧轴方向就是 y 轴方向，垂直向下。\n\n| 属性值         | 说明              |\n| -------------- | ----------------- |\n| row            | 从左到右 (默认值) |\n| row-reverse    | 从右到左          |\n| column         | 从上到下 ',2,'',0,0,3,1,1,'2023-04-22 19:53:02','2023-04-22 19:53:02',0),(41,'C 语言基础','> 本书参考自谭浩强的《C程序设计(第四版)》\n\n# C 语言程序的结构特点\n\n1. 一个程序由一个或多个源程序文件组成。一个源程序文件中可以包括`预处理指令`、`全局声明`、`函数定义`三个部分。\n2. `函数`是 C 程序的主要组成部分。\n3. 一个函数包括两个部分：`函数首部`和`函数体`。\n4. 程序总是从 `main` 函数开始执行的。\n5. 程序中对计算机的操作是由函数中的 C 语句完成的。\n7. C 语言本身不提供输入输出语句。\n9. C 语言程序开发步骤：`预处理`->`编译`->`链接`->`运行`，文件生成：`源文件`->`目标文件`->`可执行文件`。\n10. `\"\\\"` + 3位数字如 `\"\\101\"` 表示八进制数 101 的 ASCII 字符，即 `\'A\'`；`\"\\x\"` + 2位数字如 `\"\\x41\"` 表示十六进制 41 的 ASCII 字符，即 `\'A\'`；`\"\\\"` + 2位数字如 `\"\\99\"` 则直接输出 `99`。\n11. 在计算机高级语言中，用来对变量、符号常量名、函数、数组、类型等命名的有效字符序列统称为标识符。C 语言规定标识符只能由`字母`、`数字`和`下划线` 3 种字符组成，且第一个字符不能为数字。`C 语言大小写敏感`。\n12. 正数的补码为该数的二进制；负数的补码为该数的绝对值的补码按位取反再加 1。\n13. `float` 的有效数字为 6 位，`double` 的有效数字为 15 位，`long double` 的有效数字为 15 或 19 位(取决于占 8 字节还是 16 字节)。\n14. 两个整数相除的结果为整数，如 `5/3` 的结果是 `1`；但是如果除数和被除数中有一个负值，则舍入的方向是不固定的，多数系统采用`向零取整`的方法，即 `-5/3` 的值为 `-1`。\n15. `%` 运算符要求参加运算的对象为`整数`，结果也是整数。\n16. `a=b=c` 的赋值顺序是`从右到左`，先把 c 的值赋值给 b，再把 b 的值赋值给 a。\n17. 运算符两侧存在小数时，会将所有的数都转换成 `double` 型再计算。(然而实际上并不是)\n18. 一个表达式的最后加一个分号就成了一个语句。\n\n# 选择结构程序设计\n\n1. 6 种关系运算符的优先级：`<, <=, >, >=` 的优先级高于 `==, !=`。\n2. 关系运算符的优先级低于算术运算符：`c > a + b` 等效于 `c > (a + b)`。\n3. 关系运算符的优先级高于赋值运算符：`a = b > c` 等效于 `a = (b > c)`。\n4. 逻辑运算符优先级：`!` > `&&` > `||`。\n5. 逻辑运算符中的 `&&` 和 `||` 优先级低于关系运算符：`a > b && x > y`。\n6. 逻辑运算符中的 `!` 高于算术运算符。\n7. `switch` 后面括号内的表达式值类型应为`整数`类型(包括字符型)。\n8. `switch` 中如果 case 子句中没有 break 语句，将连续输出。\n\n# 数组\n\n1. 可变长数组不可指定为静态存储方式：`static int a[2*n]` 不合法。\n2. 二维数组的初始化方法：\n``` C\n// 分别赋值\nint a[2][3] = {{1, 2, 3}, {4, 5, 6}};\n// 写在一个括号内\nint a[2][3] = {1, 2, 3, 4, 5, 6};\n// 可对部分元素赋初值\nint a[2][3] = {{1}, {2}};		// 结果是 1 0 0 2 0 0\n// 若对全部元素赋初值，则第 1 维的长度可不指定\nint a[][2] = {1, 2, 3, 4};\n// 若第 1 维长度不指定且不给全部初始值，则只初始化给定数据的行的值：\nint a[][2] = {1}; 			// 值为 1 0\nint a[][2] = {1, 2, 3};			// 值为 1 2 3 0\n```\n3. 二维数组的第一维的值是一个地址。\n``` C\nint a[2][3];	// a[1] 的值为一个地址 (0x00BBFD44)\n```\n4. 字符数组相关函数(需引入 `string.h` 头文件)：\n``` C\nstrcat(dest, src);	// 将 src 的值拼接在 dest 后面，会自动去掉 dest 的 \"\\0\"， 函数返回 dest 的地址。\nstrcpy(dest, src);	// 复制 src 的值到 dest 中，复制的字符数量为 src 的长度，包括 \"\\0\"，dest 的剩余字符不会被修改。\nstrncpy(dest, src, maxlen);	// strcpy 的升级版，第三个参数为复制的字符数量，不包括 \"\\0\"。\nstrcmp(s1 ,s2);		// 从左到右依次对比两个字符串的字符，直到出现不同或 \"\\0\" 为止。完全相同返回 0；不相同时，若 s1 的字符 ASCII 码大，返回正数，反之返回负数。\nstrlen(s);		//返回字符串的实际长度，不包括 \"\\0\"。\nstrlwr(s);		//将字符串中的大写字母转换为小写字母。\nstrupr(s);		//将字符串中的小写字母转换为大写字母。\n```\n\n\n# 函数 (function)\n\n1. 函数在声明的时候可以不写形参名 `int test(int);`，也可以不写类型名 `int test(a);`。\n2. 函数的声明可以放在函数体内(作用域为当前函数)。\n3. 在定义和声明变量和函数时可以指定存储类别：`自动的(auto)`、`静态的(static)`、`寄存器的(register)`、`外部的(extern)`。\n4. 自动变量(auto)：函数中的局部变量，如果不专门声明为 static 存储类别，都是动态地分配存储空间的，数据存储在动态存储区中，函数结束时自动释放。\n5. 静态变量(static)：在静态存储区内分配存储单元，在程序整个运行期间都不释放，会自动初始化变量。\n6. 寄存器变量(register)：数据存放在寄存器中，存取速度远高于内存。编译系统会自动将频繁使用的变量放在寄存器中，实际使用的必要性并不大。\n7. 外部变量(extern)：函数外部定义的全局变量，作用域为从变量定义处开始到本程序文件末尾。用 extern 声明变量时类型名可以不写，如 `extern A`。提倡将外部变量定义放在引用它的所有函数之前，这样可以避免多加一个 extern 声明。\n8. 若需将变量作用域扩展到其他文件，可以在其他文件里使用 extern 来扩展其作用域。\n9. 外部变量放在静态存储区中；若用 static 修饰外部变量，则会限制于本文件访问，其他文件使用 extern 也无法访问。\n10. 内部函数(static)：只能被本文件中的其他函数所调用，也称为静态函数。\n11. 外部函数(extern)：如果在定义函数时不指定类别，默认为外部函数，可供其他文件调用(在文件中用 extern 声明函数)。\n\n# 指针\n\n1. 指针 `+1` 时，实际增加的地址值取决于指针的类型字节数。\n2. 在编译时，对数组元素 `a[1]` 就是按 `*(a+1)` 来处理的。\n3. 两个指针指向同一个数组时，可以相减，结果为两个指针指向的元素之间的个数。\n4. `*` 与 `++` 同优先级，结合方向为`自右而左`。(`*p++` 等价于 `*(p++)`)\n5. 字符指针变量指向的字符串常量中的内容是不可被改变的。(`char* s = \"abcde\";`)\n6. 函数指针：`int (*p)(int a, int b);`，`*p` 两侧的括号不能省略。\n7. 函数指针作参数：`int fun(int (*p)(int a, int b)){}`。\n8. main 函数的参数可以在操作系统启动程序的时候传递实参：(`a.exe \"abc\" \"def\"`)。\n9. 内存动态分配相关函数(需引入 `stdlib.h` 头文件)：\n``` C\nmalloc(size);		// 分配的内存是连续的空间，失败返回 NULL。\ncalloc(n, size);	// 分配 n 个连续的空间，一般用来给数组分配空间(动态数组)，失败返回 NULL。\nfree(p);		// 可以释放指针所指向的动态空间。\nrealloc(p, size);	// 可以重新分配由 malloc 或 calloc 分配的内存大小，失败返回 NULL。\n```\n\n\n# 自定义数据类型\n\n1. struct 是声明结构体类型时所必须使用的关键字，不能省略。\n2. 定义结构体变量时也需要加上 struct 关键字：`struct Student stu1, stu2`;。\n3. 计算机对内存的管理是以字为单位的，如果在一个字中只存放了一个字符，虽然只占一个字节，但该字的其他三个字节不会接着存放下一个数据，而会从下一个字开始存放其他数据，因此在使用 sizeof 运算符测量结构体的长度时得到的往往不是理论值。\n4. 可以在声明结构体类型同时定义该结构体变量(`struct Student { 成员列表 } 变量名列表;`)。\n5. 可以不指定结构体类型名而直接定义结构体变量(`struct { 成员列表 } 变量名列表;`)。\n6. 结构体可以定义在函数体内。\n7. 可以对结构体内某一成员进行初始化(``)，此时其他成员也会被初始化为各类型初始值。\n``` C\nstruct Student b = {.age = 18};\n```\n8. 同类型的结构体变量可以互相赋值(`stu1=stu2;`)。\n9. 共用体为几个变量共用一个内存区，其所占的内存长度等于最长的成员的长度。\n10. 对共用体变量进行初始化时，初始化表中只能有一个量。\n11. 每一个枚举元素都代表一个整数，默认是从 0 开始，也可以在定义的时候手动指定。\n12. typedef 可以声明一种新的数据类型代替原有的数据类型。\n``` C\ntypedef struct { int year; int month; int day } Date;\n```\n13. typedef 定义数组变量：`typedef int nums[100];`\n14. typedef 定义指针变量：`typedef int* Pnum;`\n15. typedef 定义函数指针变量：`typedef int(*Pointer)(int a, int b);`\n16. typedef 可以用来解决将程序移植在不同操作系统时遇到的字节大小不同或函数名不一致的问题。\n\n# 文件的输入与输出\n\n1. 文件名也叫文件标识，包括文件路径、文件名主干和文件后缀三个部分。\n2. ANSI C标准采用缓冲文件系统来处理数据文件，系统自动在内存区为程序中每一个正在使用的文件开辟一个缓冲区。从内存向磁盘输出数据时必须先送到缓冲区，`等数据装满缓冲区之后才一起送到磁盘`；从磁盘读入数据到内存时，则一次从磁盘将一批数据输入到内存缓冲区(充满缓冲区)，然后再从缓冲区逐个将数据送到程序的数据区(程序变量)。缓冲区的大小由编译系统决定。\n3. 每一个被使用的文件都在内存中开辟一个相应的文件信息区，用来存放文件的信息，这些信息放在一个结构体变量中(FILE)。\n4. 打开文件会为文件建立相应的信息区和文件缓冲区；关闭文件会撤销信息区和缓冲区。\n5. 通常将 fopen 函数的返回值赋给一个文件指针变量(`FILE *fp`)。\n6. 打开文件的方式：`r`、`w`、`a `分别为只读、只写、追加一个文本文件。如果需要读写二进制数据，则在其后面加 `b`。如果打开文件既要读又要写，则在其后面加 `+`。\n7. 打开一个不存在的文件时，如果打开方式中有 `w`，会新建一个文件，否则会出错返回 NULL。\n8. 回车符为 `\\r`，换行符为 `\\n`。读文本文档时，会自动将文件中的回车换行符(`\\r\\n`)转换为一个换行符(`\\n`)；写文本文档时，会自动将换行符转换为回车换行两个字符。读写二进制文件则不会自动转换。\n9. C语言系统已经把 fputc 和 fgetc 函数宏定义为 putc 和 getc。(然而并没有找到)\n10. 文件操作相关函数：\n``` C\nfopen(filename, mode);	// 打开一个文件。\nfclose(fp);	// 关闭打开的文件。\nfgetc(fp);	// 从文件中读取一个字节并将索引后移一位，成功返回读取的字符，失败返回 EOF(-1)。\nfputc(ch, fp);	// 写入一个字节到文件中并将索引后移一位，成功返回输出的字符，失败返回 EOF(-1)。\nfeof(fp);	// 判断文件指针的索引是否移动到文件末尾，遇到文件结束返回非 0，否则返回 0。\nfgets(str, n, fp);	// 从 fp 指向的文件读入 n 个字节放入字符数组 str 中，成功返回 str 地址，失败返回 NULL。\nfputs(str, fp);	// 把 str 所指向的字符串写到文件指针变量 fp 所指向的文件中，成功返回 0，失败返回非 0 值。\nfprintf(fp, str, list);	// 格式化输出文件，fprintf(fp, \"%d\", i) 输出的内容就是 i 的值。\nfscanf(fp, str, list);	// 格式化输入文件，fscanf(fp, \"%d\", &i) 读取文件中的整数赋值给变量 i。\nfread(buffer, size, count, fp);	// 用二进制方式读文件。其中 size 是字节数，count 是数据项。比如读取数据给一个整数数组，size 就是 4，count 就是数组长度。\nfwrite(buffer, size, count, fp);	// 用二进制方式写文件。\nrewind(fp);	// 将文件内部的指针重新指向一个流的开头。\nfseek(fp, offset, fromwhere);	// 重定位流(数据流/文件)上的文件内部位置指针。fromwhere 可取值 文件头 SEEK_SET、当前位置 SEEK_CUR、和文件尾 SEEK_END，实际值分别对应 0 1 2。offset 是基于 fromwhere 的偏移量。\nftell();	// 用于得到文件位置指针当前位置相对于文件首的偏移字节数。\nferror(fp);	// 判断文件操作是否出错，返回 0 表示未出错，返回非 0 表示出错。每次调用文件输入输出函数都会产生一个新的 ferror 值，因此应当在输入输出后立即检查避免信息丢失。执行 fopen 时会自动置 0。\nflearerr(fp);	// 将文件错误标志和文件结束标志置为 0。一般用在 ferror 检测到出错之后将标志置 0，以便下一次检测。\n```\n\n\n# 预处理指令\n\n``` C\n#define	宏名	字符串\n#define	宏名(参数1, 参数2...)	字符串\n#undef	宏名\n#include	\"文件名\" (或 <文件名>)\n#if		常量表达式\n#ifdef	宏名\n#ifndef	宏名\n#else\n#endif\n```\n','> 本书参考自谭浩强的《C程序设计(第四版)》\n\n# C 语言程序的结构特点\n\n1. 一个程序由一个或多个源程序文件组成。一个源程序文件中可以包括`预处理指令`、`全局声明`、`函数定义`三个部分。\n2. `函数`是 C 程序的主要组成部分。\n3. 一个函数包括两个部分：`函数首部`和`函数体`。\n4. 程序总是从 `main` 函数开始执行的。\n5. 程序中对计算机的操作是由函数中的 C 语句完成的。\n7. C 语言本身不提供输入输出语句。\n9. C 语言程序开发步骤：`预处理`->`编译`->`链接`->`运行`，文件生成：`源文件`->`目标文件`->`可执行文件`。\n10. `\"\\\"`',1,'',0,0,6,1,1,'2023-04-22 19:53:30','2023-04-22 19:53:30',0),(42,'Windows 清理桌面图标','> 文章转载自 https://blog.csdn.net/luoyayun361/article/details/79228390\n\n## 前言\n\nWindows 系统磁盘中存放的图标会自动缓存，有时候替换一个新的图标过后，并不会立马看到新图标，这就是因为加载的还是前一个图标的缓存文件，这时候点击右键刷新时没用的，有个比较笨的办法是重启电脑，这样可以重新加载，但是比较麻烦，在网上找到一种比较简单的方式，将命令行做成一个脚本，只要双击脚本就能解决啦。还能解决桌面图标变白的问题。\n\n## 正文\n\n新建一个文本文档，然后将文件名改成 `.bat` 格式，如 `ClearIconCache.bat`，自动变成脚本文件，然后用记事本打开该文档，将以下所有内容拷贝到文档中保存并关闭，双击该文件即可完成自动清理。\n\n``` CMD\nrem 关闭Windows外壳程序explorer\ntaskkill /f /im explorer.exe\nrem 清理系统图标缓存数据库\nattrib -h -s -r \"%userprofile%\\AppData\\Local\\IconCache.db\"\ndel /f \"%userprofile%\\AppData\\Local\\IconCache.db\"\nattrib /s /d -h -s -r \"%userprofile%\\AppData\\Local\\Microsoft\\Windows\\Explorer\\*\"\ndel /f \"%userprofile%\\AppData\\Local\\Microsoft\\Windows\\Explorer\\thumbcache_32.db\"\ndel /f \"%userprofile%\\AppData\\Local\\Microsoft\\Windows\\Explorer\\thumbcache_96.db\"\ndel /f \"%userprofile%\\AppData\\Local\\Microsoft\\Windows\\Explorer\\thumbcache_102.db\"\ndel /f \"%userprofile%\\AppData\\Local\\Microsoft\\Windows\\Explorer\\thumbcache_256.db\"\ndel /f \"%userprofile%\\AppData\\Local\\Microsoft\\Windows\\Explorer\\thumbcache_1024.db\"\ndel /f \"%userprofile%\\AppData\\Local\\Microsoft\\Windows\\Explorer\\thumbcache_idx.db\"\ndel /f \"%userprofile%\\AppData\\Local\\Microsoft\\Windows\\Explorer\\thumbcache_sr.db\"\nrem 清理 系统托盘记忆的图标\necho y|reg delete \"HKEY_CLASSES_ROOT\\Local Settings\\Software\\Microsoft\\Windows\\CurrentVersion\\TrayNotify\" /v IconStreams\necho y|reg delete \"HKEY_CLASSES_ROOT\\Local Settings\\Software\\Microsoft\\Windows\\CurrentVersion\\TrayNotify\" /v PastIconsStream\nrem 重启Windows外壳程序explorer\nstart explorer\n```','> 文章转载自 https://blog.csdn.net/luoyayun361/article/details/79228390\n\n## 前言\n\nWindows 系统磁盘中存放的图标会自动缓存，有时候替换一个新的图标过后，并不会立马看到新图标，这就是因为加载的还是前一个图标的缓存文件，这时候点击右键刷新时没用的，有个比较笨的办法是重启电脑，这样可以重新加载，但是比较麻烦，在网上找到一种比较简单的方式，将命令行做成一个脚本，只要双击脚本就能解决啦。还能解决桌面图标变白的问题。\n\n## 正文\n\n新建一个文本文档，然后将文件名改成 `.bat` 格式，如 `ClearIconCache.bat`',2,'',0,0,12,1,1,'2023-04-22 19:54:03','2023-04-22 19:54:03',0),(43,'测试文章','测试文章内容','测试文章内容',2,'',0,0,0,1,1,'2023-04-22 21:13:04','2023-04-22 21:13:51',1),(44,'测试文章标题','这里是一篇测试文章！','这里是一篇测试文章！',6,'',0,0,0,1,1,'2023-05-02 22:24:05','2023-05-02 23:09:16',1),(45,'测试文章标题','这里是一篇测试文章！','这里是一篇测试文章！',6,'',0,0,0,1,1,'2023-05-02 22:54:48','2023-05-02 22:55:18',1);

/*Table structure for table `article_tag` */

DROP TABLE IF EXISTS `article_tag`;

CREATE TABLE `article_tag` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '映射编号',
  `article_id` bigint unsigned NOT NULL COMMENT '文章编号',
  `tag_id` bigint unsigned NOT NULL COMMENT '标签编号',
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  `is_deleted` tinyint unsigned NOT NULL DEFAULT '0' COMMENT '逻辑删除',
  PRIMARY KEY (`id`),
  KEY `fk_article_tag_article_id` (`article_id`),
  KEY `fk_article_tag_tag_id` (`tag_id`)
) ENGINE=InnoDB AUTO_INCREMENT=58 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `article_tag` */

insert  into `article_tag`(`id`,`article_id`,`tag_id`,`create_time`,`update_time`,`is_deleted`) values (1,26,1,'2023-03-28 16:57:32','2023-03-28 16:57:32',0),(2,27,2,'2023-03-28 16:58:07','2023-03-28 16:58:07',1),(3,27,3,'2023-03-28 16:58:07','2023-03-28 16:58:07',1),(4,28,4,'2023-03-28 16:58:44','2023-03-28 16:58:44',1),(5,28,5,'2023-03-28 16:58:44','2023-03-28 16:58:44',1),(6,28,6,'2023-03-28 16:58:44','2023-03-28 16:58:44',1),(7,29,7,'2023-03-28 16:59:47','2023-03-28 16:59:47',1),(8,29,4,'2023-03-28 16:59:47','2023-03-28 16:59:47',1),(9,29,8,'2023-03-28 16:59:47','2023-03-28 16:59:47',1),(10,29,9,'2023-03-28 16:59:47','2023-03-28 16:59:47',1),(11,28,4,'2023-03-28 17:02:46','2023-03-28 17:02:46',0),(12,28,5,'2023-03-28 17:02:46','2023-03-28 17:02:46',0),(13,28,6,'2023-03-28 17:02:46','2023-03-28 17:02:46',0),(14,27,2,'2023-04-14 09:50:01','2023-04-14 09:50:01',1),(15,27,3,'2023-04-14 09:50:01','2023-04-14 09:50:01',1),(16,27,2,'2023-04-14 09:51:05','2023-04-14 09:51:05',1),(17,27,3,'2023-04-14 09:51:05','2023-04-14 09:51:05',1),(18,27,2,'2023-04-14 09:56:19','2023-04-14 09:56:19',0),(19,27,3,'2023-04-14 09:56:19','2023-04-14 09:56:19',0),(20,29,4,'2023-04-14 17:36:54','2023-04-14 17:36:54',1),(21,29,7,'2023-04-14 17:36:54','2023-04-14 17:36:54',1),(22,29,8,'2023-04-14 17:36:54','2023-04-14 17:36:54',1),(23,29,9,'2023-04-14 17:36:54','2023-04-14 17:36:54',1),(24,29,4,'2023-04-14 17:39:14','2023-04-14 17:39:14',1),(25,29,7,'2023-04-14 17:39:14','2023-04-14 17:39:14',1),(26,29,8,'2023-04-14 17:39:14','2023-04-14 17:39:14',1),(27,29,9,'2023-04-14 17:39:14','2023-04-14 17:39:14',1),(28,29,4,'2023-04-14 17:40:00','2023-04-14 17:40:00',1),(29,29,7,'2023-04-14 17:40:00','2023-04-14 17:40:00',1),(30,29,8,'2023-04-14 17:40:00','2023-04-14 17:40:00',1),(31,29,9,'2023-04-14 17:40:00','2023-04-14 17:40:00',1),(32,29,4,'2023-04-18 19:10:10','2023-04-18 19:10:10',0),(33,29,7,'2023-04-18 19:10:10','2023-04-18 19:10:10',0),(34,29,8,'2023-04-18 19:10:10','2023-04-18 19:10:10',0),(35,29,9,'2023-04-18 19:10:10','2023-04-18 19:10:10',0),(36,34,7,'2023-04-22 19:48:03','2023-04-22 19:48:03',0),(37,35,10,'2023-04-22 19:49:36','2023-04-22 19:49:36',0),(38,35,20,'2023-04-22 19:49:36','2023-04-22 19:49:36',0),(39,36,21,'2023-04-22 19:50:30','2023-04-22 19:50:30',0),(40,36,22,'2023-04-22 19:50:30','2023-04-22 19:50:30',0),(41,37,7,'2023-04-22 19:51:10','2023-04-22 19:51:10',0),(42,37,4,'2023-04-22 19:51:10','2023-04-22 19:51:10',0),(43,37,5,'2023-04-22 19:51:10','2023-04-22 19:51:10',0),(44,38,7,'2023-04-22 19:51:51','2023-04-22 19:51:51',0),(45,38,4,'2023-04-22 19:51:51','2023-04-22 19:51:51',0),(46,38,8,'2023-04-22 19:51:51','2023-04-22 19:51:51',0),(47,38,9,'2023-04-22 19:51:51','2023-04-22 19:51:51',0),(48,39,2,'2023-04-22 19:52:31','2023-04-22 19:52:31',1),(49,39,3,'2023-04-22 19:52:31','2023-04-22 19:52:31',1),(50,40,23,'2023-04-22 19:53:02','2023-04-22 19:53:02',0),(51,41,1,'2023-04-22 19:53:30','2023-04-22 19:53:30',0),(52,42,7,'2023-04-22 19:54:03','2023-04-22 19:54:03',0),(53,42,24,'2023-04-22 19:54:03','2023-04-22 19:54:03',0),(54,39,2,'2023-04-22 19:54:56','2023-04-22 19:54:56',0),(55,39,3,'2023-04-22 19:54:56','2023-04-22 19:54:56',0),(56,44,4,'2023-05-02 22:24:05','2023-05-02 22:24:05',1),(57,45,4,'2023-05-02 22:54:48','2023-05-02 22:54:48',1);

/*Table structure for table `category` */

DROP TABLE IF EXISTS `category`;

CREATE TABLE `category` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '分类编号',
  `name` varchar(128) NOT NULL COMMENT '分类名称',
  `description` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '默认分类描述' COMMENT '分类描述',
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  `is_deleted` tinyint unsigned NOT NULL DEFAULT '0' COMMENT '逻辑删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `category` */

insert  into `category`(`id`,`name`,`description`,`create_time`,`update_time`,`is_deleted`) values (1,'笔记','默认分类描述','2023-03-23 11:29:34','2023-03-23 11:29:34',0),(2,'教程','默认分类描述','2023-03-23 11:29:34','2023-03-23 11:29:34',0),(3,'文章','默认分类描述','2023-03-23 11:29:34','2023-03-23 11:29:34',0),(4,'日常','默认分类描述','2023-03-23 11:29:34','2023-03-23 11:29:34',0),(5,'图片','默认分类描述','2023-03-23 11:29:34','2023-03-23 11:29:34',0),(6,'测试','默认分类描述','2023-03-28 21:38:59','2023-04-12 10:44:25',0),(7,'测试分类2','这是一个测试分类','2023-03-28 22:21:35','2023-03-28 22:23:45',1),(8,'1332132','21323132','2023-04-12 10:44:13','2023-04-12 10:44:17',1),(9,'','','2023-04-13 17:49:48','2023-04-13 18:03:30',1),(10,'发送到','发送到','2023-04-22 17:16:26','2023-04-22 17:16:30',1),(11,'日记','默认分类描述','2023-04-22 19:49:36','2023-04-22 19:49:36',0),(12,'新分类222','这是一个新分类','2023-04-22 21:22:20','2023-04-22 21:23:21',1),(13,'新分类2','测试添加分类','2023-05-02 22:55:30','2023-05-02 22:56:04',1);

/*Table structure for table `comment` */

DROP TABLE IF EXISTS `comment`;

CREATE TABLE `comment` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '评论编号',
  `type` tinyint unsigned DEFAULT '0' COMMENT '评论类型（0文章 1友链）',
  `article_id` bigint unsigned NOT NULL COMMENT '评论文章编号',
  `root_id` bigint unsigned DEFAULT NULL COMMENT '评论父编号',
  `avatar` varchar(300) DEFAULT NULL COMMENT '评论者头像URL',
  `nick` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '评论者用户名',
  `email` varchar(100) DEFAULT NULL COMMENT '评论者邮箱',
  `website` varchar(200) DEFAULT NULL COMMENT '评论者网站',
  `content` varchar(512) NOT NULL COMMENT '评论内容',
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  `is_deleted` tinyint unsigned NOT NULL DEFAULT '0' COMMENT '逻辑删除',
  PRIMARY KEY (`id`),
  KEY `fk_comment_article` (`article_id`),
  KEY `fk_comment_root` (`root_id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `comment` */

insert  into `comment`(`id`,`type`,`article_id`,`root_id`,`avatar`,`nick`,`email`,`website`,`content`,`create_time`,`update_time`,`is_deleted`) values (1,0,1,NULL,'https://q1.qlogo.cn/g?b=qq&nk=1124240020&s=100','上善若水','1124240020@qq.com','','解释得非常清晰明了。','2023-03-23 13:11:11','2023-03-23 13:11:11',0),(2,0,1,NULL,'https://q1.qlogo.cn/g?b=qq&nk=1124240020&s=100','上善若水','1124240020@qq.com','','我已经在我的项目中成功应用了。','2023-03-23 13:11:24','2023-03-28 22:27:02',1),(3,0,1,NULL,'https://q1.qlogo.cn/g?b=qq&nk=1124240010&s=100','向日葵','1124240010@qq.com','','包含了许多重要的细节，让我更深入地了解了这个技术问题。','2023-03-23 13:11:51','2023-04-22 21:24:18',1),(4,0,1,NULL,'https://q1.qlogo.cn/g?b=qq&nk=24132324&s=100','小黑同学','24132324@qq.com','','非常全面，作者对这个技术领域的各个方面都有深入的研究。','2023-03-23 13:42:43','2023-03-23 13:42:43',0),(5,0,1,NULL,'https://q1.qlogo.cn/g?b=qq&nk=423142123&s=100','漫步天下','423142123@qq.com','','结构非常清晰，作者将复杂的技术问题分解成易于理解的章节，让我非常容易地理解了这个问题。','2023-03-23 13:43:10','2023-03-23 13:43:10',0),(6,0,1,NULL,'https://q1.qlogo.cn/g?b=qq&nk=4124123&s=100','missU','4124123@qq.com','','好好好！','2023-03-23 13:43:24','2023-03-24 09:34:53',1),(7,0,27,NULL,'https://q1.qlogo.cn/g?b=qq&nk=1124240020&s=100','上善若水','1124240020@qq.com','','这是一篇好文章！','2023-03-28 17:31:10','2023-03-28 17:31:10',0),(8,0,27,NULL,'https://q1.qlogo.cn/g?b=qq&nk=114514&s=100','Lv.4','114514@qq.com','','博主写的真好！','2023-03-28 17:33:00','2023-03-28 17:33:00',0),(9,0,27,NULL,'https://q1.qlogo.cn/g?b=qq&nk=1124240020&s=100','上善若水','1124240020@qq.com','','好好好！','2023-04-12 10:40:07','2023-04-12 10:40:07',0),(10,0,27,NULL,'https://q1.qlogo.cn/g?b=qq&nk=1124240010&s=100','向日葵','1124240010@qq.com','','好好好！！！','2023-04-14 09:58:57','2023-04-14 09:58:57',0),(11,0,27,NULL,'https://q1.qlogo.cn/g?b=qq&nk=1124240020&s=100','上善若水','1124240020@qq.com','','好好好！！！','2023-04-21 23:40:10','2023-04-21 23:40:10',0),(12,0,39,NULL,'https://q1.qlogo.cn/g?b=qq&nk=1124240010&s=100','向日葵','1124240010@qq.com','','文章写的不错！','2023-04-22 19:57:28','2023-04-22 19:57:28',0),(13,0,39,NULL,'https://q1.qlogo.cn/g?b=qq&nk=1124240020&s=100','上善若水','1124240020@qq.com','','文章写的不错','2023-05-02 19:34:29','2023-05-02 19:34:29',0),(14,0,39,NULL,'https://q1.qlogo.cn/g?b=qq&nk=1124240020&s=100','上善若水','1124240020@qq.com','','这是一篇好文章！','2023-05-02 22:22:59','2023-05-02 22:22:59',0),(15,0,42,NULL,'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png','1124240010','1124240010@qq.com','','asdfasdf','2023-08-31 05:25:44','2023-08-31 05:25:44',0),(16,0,39,NULL,'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png','1124240020','1124240020@qq.com','','AAA','2023-10-21 17:39:46','2023-10-21 17:39:46',0);

/*Table structure for table `link` */

DROP TABLE IF EXISTS `link`;

CREATE TABLE `link` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '友链编号',
  `name` varchar(256) NOT NULL COMMENT '友链名称',
  `logo` varchar(256) DEFAULT NULL COMMENT '友链LOGO',
  `description` varchar(512) DEFAULT NULL COMMENT '友链描述',
  `address` varchar(128) NOT NULL COMMENT '友链地址',
  `status` tinyint unsigned NOT NULL COMMENT '友链状态（0正常 1未审核）',
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  `is_deleted` tinyint unsigned NOT NULL DEFAULT '0' COMMENT '逻辑删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `link` */

/*Table structure for table `logininfor` */

DROP TABLE IF EXISTS `logininfor`;

CREATE TABLE `logininfor` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '编号',
  `username` varchar(50) NOT NULL COMMENT '用户名',
  `ipaddr` varchar(20) NOT NULL COMMENT 'IP地址',
  `location` varchar(50) DEFAULT NULL COMMENT '位置',
  `browser` varchar(50) DEFAULT NULL COMMENT '浏览器',
  `os` varchar(30) DEFAULT NULL COMMENT '系统',
  `status` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否登出',
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `is_deleted` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `logininfor` */

insert  into `logininfor`(`id`,`username`,`ipaddr`,`location`,`browser`,`os`,`status`,`create_time`,`update_time`,`is_deleted`) values (1,'shironekoa3','127.0.0.1','内网IP','Chrome 11','Windows 10',1,'2023-03-23 11:36:18','2023-03-24 09:03:31',0),(2,'shironekoa3','127.0.0.1','内网IP','Chrome 11','Windows 10',1,'2023-03-24 09:03:59','2023-03-24 09:05:35',0),(3,'shironekoa3','127.0.0.1','内网IP','Chrome 11','Windows 10',1,'2023-03-24 09:05:58','2023-03-28 16:49:01',0),(4,'shironekoa3','127.0.0.1','内网IP','Chrome 11','Windows 10',1,'2023-03-28 16:49:19','2023-03-28 16:49:22',0),(5,'shironekoa3','127.0.0.1','内网IP','Chrome 11','Windows 10',1,'2023-03-28 16:54:59','2023-03-28 17:37:17',0),(6,'shironekoa3','127.0.0.1','内网IP','Chrome 11','Windows 10',1,'2023-03-28 17:40:31','2023-03-28 21:13:35',0),(7,'shironekoa3','127.0.0.1','内网IP','Chrome 11','Windows 10',0,'2023-03-28 21:25:39','2023-03-28 21:25:39',0),(8,'shironekoa3','127.0.0.1','内网IP','Chrome 11','Windows 10',1,'2023-04-12 10:39:06','2023-04-13 19:03:38',0),(9,'shironekoa3','127.0.0.1','内网IP','Chrome 11','Windows 10',1,'2023-04-13 19:04:25','2023-04-13 19:04:35',0),(10,'shironekoa3','127.0.0.1','内网IP','Chrome 11','Windows 10',1,'2023-04-13 19:04:49','2023-04-13 19:05:27',0),(11,'shironekoa3','127.0.0.1','内网IP','Chrome 11','Windows 10',1,'2023-04-13 19:07:54','2023-04-14 09:42:29',0),(12,'shironekoa3','127.0.0.1','内网IP','Chrome 11','Windows 10',1,'2023-04-14 09:42:56','2023-04-14 12:33:16',0),(13,'admin','127.0.0.1','内网IP','Chrome 11','Windows 10',0,'2023-04-14 12:33:28','2023-04-14 12:33:28',0),(14,'admin','127.0.0.1','内网IP','Chrome 111.0.0','Windows 10',0,'2023-04-17 09:16:29','2023-04-17 09:16:29',0),(15,'admin','127.0.0.1','内网IP','Chrome 111.0.0','Windows 10',0,'2023-04-17 20:55:08','2023-04-17 20:55:08',0),(16,'admin','127.0.0.1','内网IP','Chrome 112.0.0','Windows 10',0,'2023-04-24 21:18:02','2023-04-24 21:18:02',0),(17,'admin','127.0.0.1','内网IP','Chrome 112.0.0','Windows 10',0,'2023-05-02 19:34:51','2023-05-02 19:34:51',0),(18,'admin','127.0.0.1','内网IP','Chrome 112.0.0','Windows 10',1,'2023-05-02 20:42:37','2023-05-02 21:27:37',0),(19,'admin','127.0.0.1','内网IP','Chrome 112.0.0','Windows 10',1,'2023-05-02 22:23:13','2023-05-02 22:36:38',0),(20,'admin','127.0.0.1','内网IP','Chrome 112.0.0','Windows 10',0,'2023-05-02 22:51:08','2023-05-02 22:51:08',0),(21,'admin','127.0.0.1','内网IP','Chrome 112.0.0','Windows 10',1,'2023-05-02 22:53:23','2023-05-02 22:53:34',0),(22,'admin','127.0.0.1','内网IP','Chrome 112.0.0','Windows 10',1,'2023-05-02 22:54:23','2023-05-02 22:56:56',0),(23,'admin','127.0.0.1','内网IP','Chrome 112.0.0','Windows 10',1,'2023-05-02 23:09:09','2023-05-02 23:09:21',0),(24,'admin','127.0.0.1','内网IP','Chrome 112.0.0','Windows 10',0,'2023-05-02 23:30:47','2023-05-02 23:30:47',0),(25,'admin','127.0.0.1','内网IP','Chrome 116.0.0','Windows 10',1,'2023-08-31 05:27:34','2023-08-31 05:28:42',0),(26,'admin','127.0.0.1','内网IP','Chrome 118.0.0','Windows 10',0,'2023-10-21 17:40:02','2023-10-21 17:40:02',0);

/*Table structure for table `option` */

DROP TABLE IF EXISTS `option`;

CREATE TABLE `option` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '配置编号',
  `key` varchar(256) NOT NULL COMMENT '配置项',
  `value` varchar(2048) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '配置值',
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  `is_deleted` tinyint unsigned NOT NULL DEFAULT '0' COMMENT '逻辑删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `option` */

insert  into `option`(`id`,`key`,`value`,`create_time`,`update_time`,`is_deleted`) values (1,'title','向日葵的个人博客','2023-03-23 11:29:45','2023-03-23 11:29:45',0),(2,'description','这里是向日葵的个人博客','2023-03-23 11:29:45','2023-04-12 11:50:58',0),(3,'headerImg','/images/global/background.webp','2023-03-23 11:29:45','2023-03-23 11:29:45',0),(4,'isHeaderHidden','false','2023-03-23 11:29:45','2023-03-23 11:29:45',0),(5,'author','向日葵','2023-03-23 11:29:45','2023-03-23 11:29:45',0),(6,'authorStatus','毕设项目ing...','2023-03-23 11:29:45','2023-03-23 11:29:45',0),(7,'notice','博客系统开发中...','2023-03-23 11:29:45','2023-03-23 11:29:45',0),(8,'avatar','/images/global/gravatar.jpg','2023-03-23 11:29:45','2023-03-23 11:29:45',0),(9,'viewCount','715','2023-03-23 11:29:45','2023-03-23 11:29:45',0),(10,'articleCount','10','2023-03-23 11:29:45','2023-05-02 23:09:16',0),(11,'nav','{\"首页 || home\":\"/\",\"分类 || category-management\":{\"标签\":\"/\"},\"关于 || like\":\"/\"}','2023-03-23 11:29:45','2023-04-18 18:58:36',0),(12,'footer','2020-2023丨备案号\n本站由 SpringBoot2 + Vue 3 开发\n作者：向日葵','2023-03-23 11:29:45','2023-03-23 11:29:45',0),(13,'link','http://127.0.0.1:5173','2023-03-23 11:29:45','2023-03-23 11:29:45',0),(14,'tagCount','20','2023-03-23 11:29:45','2023-04-22 21:20:26',0),(15,'categoryCount','7','2023-03-23 11:29:45','2023-05-02 22:56:05',0);

/*Table structure for table `tag` */

DROP TABLE IF EXISTS `tag`;

CREATE TABLE `tag` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '标签编号',
  `name` varchar(128) NOT NULL COMMENT '标签名称',
  `description` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '默认标签描述' COMMENT '标签描述',
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  `is_deleted` tinyint unsigned NOT NULL DEFAULT '0' COMMENT '逻辑删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `tag` */

insert  into `tag`(`id`,`name`,`description`,`create_time`,`update_time`,`is_deleted`) values (1,'C语言','默认标签描述','2023-03-28 16:57:32','2023-04-17 20:56:48',0),(2,'数据库','默认标签描述','2023-03-28 16:58:07','2023-03-28 16:58:07',0),(3,'事务','默认标签描述','2023-03-28 16:58:07','2023-03-28 16:58:07',0),(4,'Java','默认标签描述','2023-03-28 16:58:44','2023-03-28 16:58:44',0),(5,'IO','默认标签描述','2023-03-28 16:58:44','2023-03-28 16:58:44',0),(6,'文件读写','默认标签描述','2023-03-28 16:58:44','2023-03-28 16:58:44',0),(7,'转载','默认标签描述','2023-03-28 16:59:47','2023-03-28 16:59:47',0),(8,'Tomcat','默认标签描述','2023-03-28 16:59:47','2023-03-28 16:59:47',0),(9,'乱码','默认标签描述','2023-03-28 16:59:47','2023-03-28 16:59:47',0),(10,'路由器','默认标签描述','2023-03-28 17:41:33','2023-03-28 17:41:33',0),(11,'Spring','默认标签描述','2023-03-28 17:42:35','2023-03-28 17:42:35',0),(12,'Spring MVC','默认标签描述','2023-03-28 17:42:42','2023-03-28 17:42:42',0),(13,'Spring Cloud','默认标签描述','2023-03-28 17:43:17','2023-03-28 17:43:17',0),(14,'Git','默认标签描述','2023-03-28 17:43:37','2023-03-28 17:43:37',0),(15,'Linux','默认标签描述','2023-03-28 17:43:49','2023-04-13 17:46:29',0),(16,'测试标签22','测试用的标签','2023-03-28 21:52:00','2023-03-28 22:14:28',1),(17,'','','2023-03-29 13:50:55','2023-04-13 17:55:08',1),(18,'123123','123123','2023-04-12 10:43:47','2023-04-12 10:43:52',1),(19,'123','sdafasd','2023-04-13 17:46:39','2023-04-13 17:49:41',1),(20,'OpenWrt','默认标签描述','2023-04-22 19:49:36','2023-04-22 19:49:36',0),(21,'Hexo','默认标签描述','2023-04-22 19:50:30','2023-04-22 19:50:30',0),(22,'服务器','默认标签描述','2023-04-22 19:50:30','2023-04-22 19:50:30',0),(23,'CSS','默认标签描述','2023-04-22 19:53:02','2023-04-22 19:53:02',0),(24,'Windows','默认标签描述','2023-04-22 19:54:03','2023-04-22 19:54:03',0),(25,'测试标签222','测试标签描述','2023-04-22 21:16:57','2023-04-22 21:20:26',1);

/*Table structure for table `user` */

DROP TABLE IF EXISTS `user`;

CREATE TABLE `user` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '用户编号',
  `username` varchar(20) NOT NULL COMMENT '用户名',
  `password` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '用户密码',
  `identity` varchar(50) NOT NULL COMMENT '用户身份',
  `nickname` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '用户昵称',
  `email` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '用户邮箱',
  `avatar` varchar(1024) DEFAULT NULL COMMENT '用户头像',
  `profile` varchar(1024) DEFAULT NULL COMMENT '用户简介',
  `status` tinyint unsigned DEFAULT NULL COMMENT '用户状态（0正常，1封禁）',
  `create_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  `is_deleted` tinyint unsigned NOT NULL DEFAULT '0' COMMENT '逻辑删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*Data for the table `user` */

insert  into `user`(`id`,`username`,`password`,`identity`,`nickname`,`email`,`avatar`,`profile`,`status`,`create_time`,`update_time`,`is_deleted`) values (2,'shironekoa3','$2a$10$v1p9g8qLvH9hVbvc2gMRAOqBvOLL1H9Cm/KUl.2stzk3U4vjql0O2','admin',NULL,NULL,NULL,NULL,NULL,'2023-03-23 11:36:17','2023-03-23 11:36:17',1),(3,'admin','$2a$10$n9Dr445FFqMMxG3h5SJUVOZhhadZr/sQRUD0.TDwKNynrj168V6jC','admin',NULL,NULL,NULL,NULL,NULL,'2023-04-14 12:33:28','2023-04-14 12:33:28',0);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
